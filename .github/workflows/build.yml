name: build

on:
  repository_dispatch:
    types: [build]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Base container version tag'
        required: true
        default: 'null'

jobs:
  base-build:
    runs-on: ubuntu-24.04
    name: workshop-build
    steps:
      - name: tag
        id: version-tag
        run: |
          if [ ${{ github.event.inputs.tag }} != 'null' ]; then
            echo "tag=${{ github.event.inputs.tag }}" >> $GITHUB_OUTPUT
          else
            echo "tag=${{ github.event.client_payload.tag }}" >> $GITHUB_OUTPUT
          fi

      - name: checkout
        uses: actions/checkout@v4.2.2

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5.7.0
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            dev
          labels: |
            annotation-index.org.opencontainers.image.source=https://github.com/${{ github.repository }}
            annotation-index.org.opencontainers.image.licenses=MIT
            annotation-index.org.opencontainers.image.description=A repository containing the build steps for the ccpbiosim workshop on Ubiquitin analysis.
        env:
          DOCKER_METADATA_ANNOTATIONS_LEVELS: manifest,index

      - name: Set up QEMU
        id: qemu
        uses: docker/setup-qemu-action@v3.6.0

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3.10.0

      - name: Authenticate with GHCR
        id: ghcr-auth
        uses: docker/login-action@v3.4.0
        with:
          registry: ghcr.io
          username: ${{github.actor}}
          password: ${{secrets.BUILD_TOKEN}}

      - name: Build and push
        id: build-push
        uses: docker/build-push-action@v6.18.0
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          annotations: ${{ steps.meta.outputs.annotations }}

      - name: Dispatch Tests
        uses: peter-evans/repository-dispatch@v3.0.0
        with:
          token: ${{ secrets.BUILD_TOKEN }}
          repository: ${{ github.repository }}
          event-type: test    
          client-payload: '{"tag": "${{ steps.version-tag.outputs.tag }}"}'
